{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\XIE\\\\MAD\\\\n2\\\\invoice-generator\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\n\nfunction cloneCanvasElement(node) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var dataURL;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataURL = node.toDataURL();\n\n            if (!(dataURL === 'data:,')) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve(node.cloneNode(false)));\n\n          case 3:\n            return _context.abrupt(\"return\", createImage(dataURL));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nfunction cloneVideoElement(node, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.resolve(node.poster).then(function (url) {\n              return getBlobFromURL(url, options);\n            }).then(function (data) {\n              return makeDataUrl(data.blob, getMimeType(node.poster) || data.contentType);\n            }).then(function (dataURL) {\n              return createImage(dataURL);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\n\nfunction cloneSingleNode(node, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(node instanceof HTMLCanvasElement)) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", cloneCanvasElement(node));\n\n          case 2:\n            if (!(node instanceof HTMLVideoElement && node.poster)) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", cloneVideoElement(node, options));\n\n          case 4:\n            return _context3.abrupt(\"return\", Promise.resolve(node.cloneNode(false)));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\n\nvar isSlotElement = function isSlotElement(node) {\n  return node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\n};\n\nfunction cloneChildren(nativeNode, clonedNode, options) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var children;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            children = isSlotElement(nativeNode) && nativeNode.assignedNodes ? toArray(nativeNode.assignedNodes()) : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n\n            if (!(children.length === 0 || nativeNode instanceof HTMLVideoElement)) {\n              _context4.next = 3;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode));\n\n          case 3:\n            return _context4.abrupt(\"return\", children.reduce(function (deferred, child) {\n              return deferred // eslint-disable-next-line no-use-before-define\n              .then(function () {\n                return cloneNode(child, options);\n              }).then(function (clonedChild) {\n                // eslint-disable-next-line promise/always-return\n                if (clonedChild) {\n                  clonedNode.appendChild(clonedChild);\n                }\n              });\n            }, Promise.resolve()).then(function () {\n              return clonedNode;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}\n\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n  var source = window.getComputedStyle(nativeNode);\n  var target = clonedNode.style;\n\n  if (!target) {\n    return;\n  }\n\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    toArray(source).forEach(function (name) {\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    });\n  }\n}\n\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\n\nfunction decorate(nativeNode, clonedNode) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (clonedNode instanceof Element) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", Promise.resolve(clonedNode));\n\n          case 2:\n            return _context5.abrupt(\"return\", Promise.resolve().then(function () {\n              return cloneCSSStyle(nativeNode, clonedNode);\n            }).then(function () {\n              return clonePseudoElements(nativeNode, clonedNode);\n            }).then(function () {\n              return cloneInputValue(nativeNode, clonedNode);\n            }).then(function () {\n              return clonedNode;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n}\n\nexport function cloneNode(node, options, isRoot) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(!isRoot && options.filter && !options.filter(node))) {\n              _context6.next = 2;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", Promise.resolve(null));\n\n          case 2:\n            return _context6.abrupt(\"return\", Promise.resolve(node).then(function (clonedNode) {\n              return cloneSingleNode(clonedNode, options);\n            }).then(function (clonedNode) {\n              return cloneChildren(node, clonedNode, options);\n            }).then(function (clonedNode) {\n              return decorate(node, clonedNode);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n}","map":{"version":3,"mappings":"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","names":["getBlobFromURL","clonePseudoElements","createImage","getMimeType","makeDataUrl","toArray","cloneCanvasElement","node","dataURL","toDataURL","Promise","resolve","cloneNode","cloneVideoElement","options","poster","then","url","data","blob","contentType","cloneSingleNode","HTMLCanvasElement","HTMLVideoElement","isSlotElement","tagName","toUpperCase","cloneChildren","nativeNode","clonedNode","children","assignedNodes","shadowRoot","_a","childNodes","length","reduce","deferred","child","clonedChild","appendChild","cloneCSSStyle","source","window","getComputedStyle","target","style","cssText","forEach","name","setProperty","getPropertyValue","getPropertyPriority","cloneInputValue","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","decorate","Element","isRoot","filter"],"sources":["../src/cloneNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}