{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\XIE\\\\MAD\\\\n2\\\\invoice-generator\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\n\nfunction embedBackground(clonedNode, options) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var background;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n\n            if (background) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve(clonedNode));\n\n          case 3:\n            return _context.abrupt(\"return\", Promise.resolve(background).then(function (cssString) {\n              return embedResources(cssString, null, options);\n            }).then(function (cssString) {\n              clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n              return clonedNode;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nfunction embedImageNode(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var src;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) && !(clonedNode instanceof SVGImageElement && !isDataUrl(clonedNode.href.baseVal)))) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Promise.resolve(clonedNode));\n\n          case 2:\n            src = clonedNode instanceof HTMLImageElement ? clonedNode.src : clonedNode.href.baseVal;\n            return _context2.abrupt(\"return\", Promise.resolve(src).then(function (url) {\n              return getBlobFromURL(url, options);\n            }).then(function (data) {\n              return makeDataUrl(data.blob, getMimeType(src) || data.contentType);\n            }).then(function (dataURL) {\n              return new Promise(function (resolve, reject) {\n                clonedNode.onload = resolve;\n                clonedNode.onerror = reject;\n\n                if (clonedNode instanceof HTMLImageElement) {\n                  clonedNode.srcset = '';\n                  clonedNode.src = dataURL;\n                } else {\n                  clonedNode.href.baseVal = dataURL;\n                }\n              });\n            }).then(function () {\n              return clonedNode;\n            }, function () {\n              return clonedNode;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\n\nfunction embedChildren(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var children, deferreds;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            children = toArray(clonedNode.childNodes); // eslint-disable-next-line no-use-before-define\n\n            deferreds = children.map(function (child) {\n              return embedImages(child, options);\n            });\n            return _context3.abrupt(\"return\", Promise.all(deferreds).then(function () {\n              return clonedNode;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\n\nexport function embedImages(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (clonedNode instanceof Element) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode));\n\n          case 2:\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode).then(function (node) {\n              return embedBackground(node, options);\n            }).then(function (node) {\n              return embedImageNode(node, options);\n            }).then(function (node) {\n              return embedChildren(node, options);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}","map":{"version":3,"mappings":"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","names":["getBlobFromURL","embedResources","getMimeType","isDataUrl","makeDataUrl","toArray","embedBackground","clonedNode","options","background","style","_a","getPropertyValue","Promise","resolve","then","cssString","setProperty","getPropertyPriority","embedImageNode","HTMLImageElement","src","SVGImageElement","href","baseVal","url","data","blob","contentType","dataURL","reject","onload","onerror","srcset","embedChildren","children","childNodes","deferreds","map","child","embedImages","all","Element","node"],"sources":["../src/embedImages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}